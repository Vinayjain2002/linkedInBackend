version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    depends_on:
      - user-service
      - post-service
      - connection-service
      - chat-service
      - media-service
      - analytics-service
      - notification-service
      - search-service
    networks:
      - linkedin-network

  # User Service
  user-service:
    build: ./services/user-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - POSTGRES_URI=postgresql://postgres:password@postgres:5432/linkedin_users
      - REDIS_URI=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key
    depends_on:
      - postgres
      - redis
    networks:
      - linkedin-network

  # Post Service
  post-service:
    build: ./services/post-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - POSTGRES_URI=postgresql://postgres:password@postgres:5432/linkedin_posts
      - REDIS_URI=redis://redis:6379
      - RABBITMQ_URI=amqp://rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - linkedin-network

  # Connection Service
  connection-service:
    build: ./services/connection-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URI=redis://redis:6379
      - RABBITMQ_URI=amqp://rabbitmq:5672
    depends_on:
      - neo4j
      - redis
      - rabbitmq
    networks:
      - linkedin-network

  # Chat Service
  chat-service:
    build: ./services/chat-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - MONGODB_URI=mongodb://mongodb:27017/linkedin_chat
      - REDIS_URI=redis://redis:6379
      - RABBITMQ_URI=amqp://rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - linkedin-network

  # Media Service
  media-service:
    build: ./services/media-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - AWS_ACCESS_KEY_ID=your-access-key
      - AWS_SECRET_ACCESS_KEY=your-secret-key
      - AWS_REGION=us-east-1
      - S3_BUCKET=linkedin-media-bucket
      - REDIS_URI=redis://redis:6379
      - RABBITMQ_URI=amqp://rabbitmq:5672
    depends_on:
      - redis
      - rabbitmq
    networks:
      - linkedin-network

  # Analytics Service
  analytics-service:
    build: ./services/analytics-service
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - PORT=3006
      - MONGODB_URI=mongodb://mongodb:27017/linkedin_analytics
      - REDIS_URI=redis://redis:6379
      - RABBITMQ_URI=amqp://rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - linkedin-network

  # Notification Service
  notification-service:
    build: ./services/notification-service
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - PORT=3007
      - REDIS_URI=redis://redis:6379
      - RABBITMQ_URI=amqp://rabbitmq:5672
    depends_on:
      - redis
      - rabbitmq
    networks:
      - linkedin-network

  # Search Service
  search-service:
    build: ./services/search-service
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=development
      - PORT=3008
      - ELASTICSEARCH_URI=http://elasticsearch:9200
      - REDIS_URI=redis://redis:6379
    depends_on:
      - elasticsearch
      - redis
    networks:
      - linkedin-network

  # Databases
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=linkedin_users
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - linkedin-network

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - linkedin-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - linkedin-network

  neo4j:
    image: neo4j:5
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    networks:
      - linkedin-network

  elasticsearch:
    image: elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - linkedin-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - linkedin-network

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  neo4j_data:
  elasticsearch_data:
  rabbitmq_data:

networks:
  linkedin-network:
    driver: bridge 